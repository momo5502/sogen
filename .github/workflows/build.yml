name: Build

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        include:
          - configuration: Debug
            preset: debug
          - configuration: Release
            preset: release
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.13.0

      - name: CMake Build
        run: cmake --workflow --preset=${{matrix.preset}}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Windows ${{matrix.configuration}} Artifacts
          path: |
            build/${{matrix.preset}}/artifacts/*

      - name: Dump Registry
        run: cd build/${{matrix.preset}}/artifacts && ../../../src/grab-registry.bat

      - name: CMake Test
        run: cd build/${{matrix.preset}} && ctest --verbose

  build-linux-gcc:
    name: Build Linux GCC
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        include:
          - configuration: Debug
            preset: debug
          - configuration: Release
            preset: release
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v5

      - name: CMake Build
        run: cmake --workflow --preset=${{matrix.preset}}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Linux GCC ${{matrix.configuration}} Artifacts
          path: |
            build/${{matrix.preset}}/artifacts/*

  build-linux-clang:
    name: Build Linux Clang
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        include:
          - configuration: Debug
            preset: debug
          - configuration: Release
            preset: release
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v5

      - name: Install Clang
        run: |
          sudo apt update
          sudo apt install -y wget gnupg software-properties-common
          wget https://apt.llvm.org/llvm-snapshot.gpg.key -O- | sudo gpg --dearmor -o /usr/share/keyrings/llvm-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/llvm-archive-keyring.gpg] https://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-18 main" | sudo tee /etc/apt/sources.list.d/llvm.list
          sudo apt update
          sudo apt install -y clang-18 lld-18
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-18 100
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-18 100
          sudo update-alternatives --set cc /usr/bin/clang-18
          sudo update-alternatives --set c++ /usr/bin/clang++-18

      - name: CMake Build
        run: cmake --workflow --preset=${{matrix.preset}}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Linux Clang ${{matrix.configuration}} Artifacts
          path: |
            build/${{matrix.preset}}/artifacts/*

  build-mac:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        include:
          - configuration: Debug
            preset: debug
          - configuration: Release
            preset: release
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          brew install ninja

      - name: CMake Build
        run: cmake --workflow --preset=${{matrix.preset}}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macOS ${{matrix.configuration}} Artifacts
          path: |
            build/${{matrix.preset}}/artifacts/*
